@using Entities;
@using BAL;

@{
    Layout = "~/Pages/Layouts/_MainLayout.cshtml";
    Page.Name = "Awards";

    IAwardAssotiateLogic awardManagerLogic = new AwardLogic(System.Web.Hosting.HostingEnvironment.MapPath("~/Data/awards.txt"), System.Web.Hosting.HostingEnvironment.MapPath("~/Data/assotiations.txt"));
    awardManagerLogic.LoadData();
    var temp = awardManagerLogic.GetAll();


    var tempAw = awardManagerLogic.GetAll();


    string addMessage = "", removeMessage = "", updateMessage = "";
}

<script>

</script>

<div>
    <table class="list" id="list">
        <colgroup>
            <col width="100" />
            <col width="250" />
            <col width="450" />
        </colgroup>
        @foreach (var item in temp)
        {
            <tr>
                <td>
                    @item.Id
                </td>
                <td>
                    @item.Name
                </td>
                <td>
                    @item.Discription
                </td>
            </tr>
        }
    </table>

</div>

@{
    if (IsPost)
    {

        if (Request.Form.AllKeys.Contains("remove-name"))
        {
            try
            {
                awardManagerLogic.RemoveSecondId(awardManagerLogic.Find(Request["remove-name"]));
                if (!awardManagerLogic.RemoveAward(Request["remove-name"]))
                {
                    throw new FormatException("No such award");
                }
                awardManagerLogic.SaveData();

                Response.Redirect("~/Pages/awards.cshtml");
            }
            catch (Exception e)
            {
                addMessage = e.Message;
            }
        }

        if (Request.Form.AllKeys.Contains("add-name"))
        {
            try
            {
                if (!awardManagerLogic.AddAward(Request["add-name"], Request["add-discr"]))
                {
                    throw new FormatException("This award already exists");
                }
                awardManagerLogic.SaveData();

                Response.Redirect("~/Pages/awards.cshtml");
            }
            catch (Exception e)
            {
                removeMessage = e.Message;
            }
        }

        if (Request.Form.AllKeys.Contains("update-name"))
        {
            try
            {
                if (!awardManagerLogic.UpdateAward(lib.GetId(Request["select-update-Award"]), new Award(lib.GetId(Request["select-update-Award"]), Request["update-name"], Request["update-discr"])))
                {
                    throw new FormatException("No such Award");
                }
                awardManagerLogic.SaveData();

                Response.Redirect("~/Pages/awards.cshtml");
            }
            catch (Exception e)
            {
                updateMessage = e.Message;
            }
        }
    }
}

<div class="forminpt">
    <form method="post">
        <fieldset class="adduser">
            <legend>Add Award</legend>
            <label>Name<input type="text" required name="add-name"></label>
            <label>Discription<input type="text" required name="add-discr"></label>
            <input type="submit" value="submit" id="add-button" />

            <label class="errorMessage">@addMessage</label>

        </fieldset>
    </form>

    <form method="post">
        <fieldset class="removeuser">
            <legend id="a">Remove Award</legend>
            <label>Name<input type="text" required name="remove-name"></label>
            <input type="submit" value="submit" id="remove-button" onclick="return confirmDelete()" />

            <label class="errorMessage">@removeMessage</label>
        </fieldset>

    </form>

    <form method="post">
        <fieldset class="updateuser">
            <legend id="a">Update Award</legend>
            <label for="select-update-Award">Select Id award</label>
            <select name="select-update-Award">
                @foreach (var item in tempAw)
                {
                    string tmp = $"{item.Id} {item.Name}";
                    <option>@tmp</option>
                }
            </select>

            <label>Name<input type="text" required name="update-name"></label>
            <label>Discription<input type="text" required name="uprate-discr"></label>

            <input type="submit" value="submit" id="update-button" />

            <label class="errorMessage">@updateMessage</label>
        </fieldset>

    </form>
</div>

<script>
    function confirmDelete() {
        if (confirm("If you delete an award, it will be deleted by all users!")) {
            return true;
        } else {
            return false;
        }
    }
</script>