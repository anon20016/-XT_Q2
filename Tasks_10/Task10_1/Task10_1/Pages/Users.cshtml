@using Entities;
@using BAL;

@{
    Layout = "~/Pages/Layouts/_MainLayout.cshtml";
}

@{
    IUserLogic userManagerLogic = new UserLogic(System.Web.Hosting.HostingEnvironment.MapPath("~/Data/users.txt"));
    IAwardAssotiateLogic awardManagerLogic = new AwardLogic(System.Web.Hosting.HostingEnvironment.MapPath("~/Data/awards.txt"), System.Web.Hosting.HostingEnvironment.MapPath("~/Data/assotiations.txt"));

    awardManagerLogic.LoadData();
    userManagerLogic.LoadData();
    var temp = userManagerLogic.GetAll();

    string addMessage = "", removeMessage = "";
}


<div>
    <table>
        <colgroup>
            <col width="100" />
            <col width="450" />
            <col width="250" />
        </colgroup>
        @foreach (var item in temp)
        {
            <tr>
                <td>
                    @item.Id
                </td>
                <td>
                    @item.Name
                </td>
                <td>
                    @item.DateOfBirth
                </td>
            </tr>
        }
    </table>
</div>


@{
    string r = null;
    string name = null, dob = null;
    if (IsPost)
    {

        if (Request.Form.AllKeys.Contains("removename"))
        {
            try
            {
                awardManagerLogic.RemoveFirstId(userManagerLogic.Find(Request["removename"], Request["removedob"]));
                if (!userManagerLogic.RemoveUser(Request["removename"], Request["removedob"]))
                {
                    throw new FormatException("No such user");
                }
                awardManagerLogic.SaveData();
                userManagerLogic.SaveData();

                Response.Redirect("~/Pages/users.cshtml");
            }
            catch (Exception e)
            {
                addMessage = e.Message;
            }
        }
        else
        {
            try
            {
                if (!userManagerLogic.AddUser(Request["addname"], Request["adddob"]))
                {
                    throw new FormatException("This user already exists");
                }
                awardManagerLogic.SaveData();
                userManagerLogic.SaveData();

                Response.Redirect("~/Pages/users.cshtml");
            }
            catch (Exception e)
            {
                removeMessage = e.Message;
            }
        }
    }
}

<div class="forminpt">
    <form method="post">
        <fieldset class="adduser">
            <legend>Add User</legend>
            <label>Name<input type="text" required name="addname"></label>
            <label>Date of birth<input type="text" required placeholder="dd.mm.yyyy" name="adddob" pattern="^([0-2][0-9]|(3)[0-1])(\.)(((0)[0-9])|((1)[0-2]))(\.)\d{4}$"></label>
            <input type="submit" value="submit" id="addbutton" />

            <label class="errorMessage">@addMessage</label>

        </fieldset>
    </form>
    
    <form method="post">
        <fieldset class="removeuser">
            <legend id="a">Remove User</legend>
            <label>Name<input type="text" required name="removename"></label>
            <label>Date of birth<input type="text" required placeholder="dd.mm.yyyy" name="removedob" pattern="^([0-2][0-9]|(3)[0-1])(\.)(((0)[0-9])|((1)[0-2]))(\.)\d{4}$"></label>
            <input type="submit" value="submit" id="removebutton" />
            <label class="errorMessage">@removeMessage</label>
        </fieldset>

    </form>
</div>


